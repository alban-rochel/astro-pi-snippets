import json
import matplotlib.pyplot as plt
#import statistics
#from math import sqrt


#def plot_confidence_interval(x, values, z=1.96, color='#2187bb', horizontal_line_width=0.25):
#    mean = statistics.mean(values)
#    stdev = statistics.stdev(values)
#    confidence_interval = z * stdev / sqrt(len(values))

#    left = x - horizontal_line_width / 2
#    top = mean - confidence_interval
#    right = x + horizontal_line_width / 2
#    bottom = mean + confidence_interval
#    plt.plot([x, x], [top, bottom], color=color)
#    plt.plot([left, right], [top, top], color=color)
#    plt.plot([left, right], [bottom, bottom], color=color)
#    plt.plot(x, mean, 'o', color='#f44336')

#    return mean, confidence_interval


#plt.xticks([1, 2, 3, 4], ['FF', 'BF', 'FFD', 'BFD'])
#plt.title('Confidence Interval')
#plot_confidence_interval(1, [10, 11, 42, 45, 44])
#plot_confidence_interval(2, [10, 21, 42, 45, 44])
#plot_confidence_interval(3, [20, 2, 4, 45, 44])
#plot_confidence_interval(4, [30, 31, 42, 45, 44])
#plt.show()


f = open("final_final.json")
    
data = json.load(f)

print(data)

def plotClimate(y, index, color):
    mean = data[index]["mean"]
    stdev = data[index]["stdev"]
    left = mean - stdev
    right = mean + stdev
    plt.plot([left, right], [y, y], color=color)
    plt.plot(mean, y, 'o', color=color)

plotClimate(1, "5", "#00FF80")
plotClimate(2, "10", "#FF8080")
plotClimate(3, "15", "#8080FF")
plotClimate(4, "20", "#808080")

plt.yticks([1, 2, 3, 4], ['Tropical', 'Dry', 'Temperate', 'Continental'])
plt.title("NDVI values per (rough) climate zone")
plt.xlim([0, 1])
plt.show()

plt.yticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ['Tropical\nrainforest', 'Tropical\nmonsoon', 'Savanna', 'Desert', 'Semi\narid', 'Humid\nsubtropical', 'Oceanic', 'Mediterranean', 'Humid\ncontinental', 'Subarctic'])
plotClimate(1, "51", "#00FF80")
plotClimate(2, "52", "#00FF80")
plotClimate(3, "53", "#00FF80")
plotClimate(4, "101", "#FF8080")
plotClimate(5, "102", "#FF8080")
plotClimate(6, "151", "#8080FF")
plotClimate(7, "152", "#8080FF")
plotClimate(8, "153", "#8080FF")
plotClimate(9, "201", "#808080")
plotClimate(10, "202", "#808080")


plt.title("NDVI values per (precise) climate zone")
plt.xlim([0, 1])
plt.show()